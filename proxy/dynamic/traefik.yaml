###
### junand 14.03.2020
###

tls:

    # https://ssl-config.mozilla.org/#server=traefik&config=intermediate
    # due to Go limitations, it is highly recommended that you use an ECDSA
    # certificate, or you may experience compatibility issues

    stores:
        default:
            defaultCertificate:
                keyFile: /etc/ssl/nodesathome/certificate-key-{{ env "PARENT_HOSTNAME" }}.pem
                certFile: /etc/ssl/nodesathome/certificate-pub-{{ env "PARENT_HOSTNAME" }}.pem

    options:
        intermediate:
            minVersion: "VersionTLS12"
            cipherSuites:
              - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
              - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
              - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
              - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
              - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
              - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"

http:

    routers:

        web:
            entryPoints:
              - 'web'
            rule: 'HostRegexp(`{any:.*}`)'
            middlewares:
              - web-redirect
              # - hsts-header
            service: redirect-all

        api:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && ( PathPrefix(`/api`) || PathPrefix(`/dashboard`) )'
            service: api@internal
            middlewares:
              - pokemonnet
            tls:
                options: intermediate

        whoami:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && PathPrefix(`/whoami`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: whoami-traefik@docker
            tls:
                options: intermediate

        nginx:
            entryPoints:
              - 'web_secure'
            rule: 'Host(`{{ env "PARENT_HOSTNAME" }}`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: nginx-nodesathome@docker
            tls:
                options: intermediate

        grafana:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && PathPrefix(`/grafana`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: grafana-metrics@docker
            tls:
                options: intermediate

        nodered:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && PathPrefix(`/nodered`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: nodered-nodesathome@docker
            tls:
                options: intermediate

        hass:
            entryPoints:
              - 'hass_secure'
            rule: 'Host(`{{ env "PARENT_HOSTNAME" }}`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: hass-nodesathome@docker
            tls:
                options: intermediate

        octoprint:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && PathPrefix(`/octoprint`)'
            middlewares:
              - pokemonnet
              - octoprint_headers
              - stripprefix
              # - hsts-header
            service: octoprint-printer3d@docker
            tls:
                options: intermediate

        kibana:
            entryPoints:
              # - 'web_secure'
              - 'kibana_secure'
            rule: 'Host(`{{ env "PARENT_HOSTNAME" }}`)'
            middlewares:
              - pokemonnet
              # - hsts-header
            service: kibana-logging@docker
            tls:
                options: intermediate

        elasticsearch:
            entryPoints:
              - 'web_secure'
            rule: '( Host(`{{ env "PARENT_HOSTNAME" }}`) ) && PathPrefix(`/elastic`)'
            middlewares:
              - pokemonnet
              - stripprefix
              # - hsts-header
            service: elasticsearch-logging@docker
            tls:
                options: intermediate

    middlewares:
        octoprint_headers:
            headers:
                customRequestHeaders:
                    X-Script-Name: '/octoprint'
        stripprefix:
            stripPrefix:
                prefixes:
                  - '/octoprint'
                  - '/elastic'
                forceSlash: false
        octoprint_stripprefix:
            stripPrefix:
                prefixes:
                  - '/octoprint'
                forceSlash: false
        elastic_stripprefix:
            stripPrefix:
                prefixes:
                  - '/elastic'
                forceSlash: false
        web-redirect:
            redirectScheme:
                scheme: https
        hsts-header:
            headers:
                customResponseHeader:
                    Strict-Transport-Security: "max-age=63072000"
        auth:
            basicAuth:
                users:
                  - "test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"
                  - "test2:$apr1$d9hr9HBB$4HxwgUir3HP4EsggP/QNo0"
        onlysurface:
            ipWhiteList:
                sourceRange:
                  - 192.168.2.134/32
        pokemonnet:
            ipWhiteList:
                sourceRange:
                  - 192.168.2.0/24

    services:
        redirect-all:
            loadBalancer:
                servers:
                  - url: ''

tcp:

    routers:

        mosquitto:
            entryPoints: 
              - mqtt
            # rule: 'HostSNI(`{{ env "PARENT_HOSTNAME" }}`)'
            rule: HostSNI(`*`)
            middlewares:
              - pokemonnet
            service: mosquitto-nodesathome@docker

        mosquitto_secure:
            entryPoints:
              - mqtt_secure
            rule: HostSNI(`*`)
            middlewares:
              - pokemonnet
              # - hsts-header
            service: mosquitto-nodesathome@docker
            tls:
                options: intermediate

        trace:
            entryPoints:
              - trace
            rule: HostSNI(`*`)
            middlewares:
              - pokemonnet
              # - hsts-header
            service: nodered-trace

        trace_secure:
            entryPoints:
              - trace_secure
            rule: HostSNI(`*`)
            middlewares:
              - pokemonnet
              # - hsts-header
            service: nodered-trace
            tls:
                options: intermediate

    services:
        nodered-trace:
            loadBalancer:
                servers:
                  - address: nodered:10001

    middlewares:
        pokemonnet:
            ipWhiteList:
                sourceRange:
                  - 192.168.2.0/24
